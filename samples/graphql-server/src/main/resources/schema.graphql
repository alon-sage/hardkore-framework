scalar File

type Query {
    user(id: ID): User
}

type Mutation {
    emitEvent(userId: ID, message: String, source: EventSource): Event
    upload(file: File): FileInfo
}

type Subscription {
    userEvents(userId: ID): Event
}

type User {
    id: ID
    name: String
    lastEvents(number: Int): [Event]
}

enum EventSource {
    SYSTEM,
    USER
}

type FileInfo {
    name: String
    type: String
    content: String
}

type Event {
    id: ID
    message: String
    source: EventSource
}